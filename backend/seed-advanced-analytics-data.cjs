/**
 * Script: T·∫°o d·ªØ li·ªáu m·∫´u ƒë·∫ßy ƒë·ªß cho b√°o c√°o n√¢ng cao
 * - C√¥ng th·ª©c m√≥n (recipe) cho t·∫•t c·∫£ m√≥n hi·ªán c√≥
 * - L·ªãch s·ª≠ nh·∫≠p kho
 * - C·∫≠p nh·∫≠t gi√° v·ªën m√≥n
 * - B·∫£ng c√¥ng nh√¢n vi√™n
 * - Chi ph√≠ ƒëa d·∫°ng h∆°n
 */

require('dotenv').config();
const { Pool } = require('pg');

const pool = new Pool({
  host: process.env.DB_HOST || 'localhost',
  port: process.env.DB_PORT || 5432,
  user: process.env.DB_USER || 'postgres',
  password: process.env.DB_PASSWORD,
  database: process.env.DB_NAME || 'coffee_shop',
});

async function seedData() {
  const client = await pool.connect();
  
  try {
    console.log('üå± B·∫Øt ƒë·∫ßu seed d·ªØ li·ªáu m·∫´u...\n');
    
    await client.query('BEGIN');
    
    // =====================================================================
    // 1. C√îNG TH·ª®C M√ìN (Recipe)
    // =====================================================================
    console.log('üìã 1. T·∫°o c√¥ng th·ª©c m√≥n...');
    
    // L·∫•y danh s√°ch m√≥n hi·ªán c√≥
    const monsResult = await client.query(`
      SELECT m.id, m.ten, mbt.id as bien_the_id, mbt.ten_bien_the
      FROM mon m
      LEFT JOIN mon_bien_the mbt ON mbt.mon_id = m.id AND mbt.active = TRUE
      WHERE m.active = TRUE
      ORDER BY m.id, mbt.id
    `);
    
    console.log(`   T√¨m th·∫•y ${monsResult.rows.length} m√≥n/bi·∫øn th·ªÉ\n`);
    
    // C√¥ng th·ª©c cho C√† ph√™ s·ªØa ƒë√° (Size S, M, L)
    await client.query(`
      INSERT INTO cong_thuc_mon (mon_id, bien_the_id, nguyen_lieu_id, so_luong, ghi_chu) VALUES
      -- C√† ph√™ s·ªØa ƒë√° Size S (id m√≥n: 1, Size S) - ƒê∆°n v·ªã: gram/ml
      (1, (SELECT id FROM mon_bien_the WHERE mon_id = 1 AND ten_bien_the = 'Size S'), 
       (SELECT id FROM nguyen_lieu WHERE ma = 'CF-BOT'), 0.015, 'C√† ph√™ b·ªôt cho ly S (15g)'),
      (1, (SELECT id FROM mon_bien_the WHERE mon_id = 1 AND ten_bien_the = 'Size S'), 
       (SELECT id FROM nguyen_lieu WHERE ma = 'SUA-TUOI'), 0.080, 'S·ªØa t∆∞∆°i cho ly S (80ml)'),
      (1, (SELECT id FROM mon_bien_the WHERE mon_id = 1 AND ten_bien_the = 'Size S'), 
       (SELECT id FROM nguyen_lieu WHERE ma = 'DUONG-TRANG'), 0.010, 'ƒê∆∞·ªùng cho ly S (10g)'),
      (1, (SELECT id FROM mon_bien_the WHERE mon_id = 1 AND ten_bien_the = 'Size S'), 
       (SELECT id FROM nguyen_lieu WHERE ma = 'DA'), 0.100, 'ƒê√° cho ly S (100g)'),
      
      -- C√† ph√™ s·ªØa ƒë√° Size M
      (1, (SELECT id FROM mon_bien_the WHERE mon_id = 1 AND ten_bien_the = 'Size M'), 
       (SELECT id FROM nguyen_lieu WHERE ma = 'CF-BOT'), 0.020, 'C√† ph√™ b·ªôt cho ly M (20g)'),
      (1, (SELECT id FROM mon_bien_the WHERE mon_id = 1 AND ten_bien_the = 'Size M'), 
       (SELECT id FROM nguyen_lieu WHERE ma = 'SUA-TUOI'), 0.100, 'S·ªØa t∆∞∆°i cho ly M (100ml)'),
      (1, (SELECT id FROM mon_bien_the WHERE mon_id = 1 AND ten_bien_the = 'Size M'), 
       (SELECT id FROM nguyen_lieu WHERE ma = 'DUONG-TRANG'), 0.015, 'ƒê∆∞·ªùng cho ly M (15g)'),
      (1, (SELECT id FROM mon_bien_the WHERE mon_id = 1 AND ten_bien_the = 'Size M'), 
       (SELECT id FROM nguyen_lieu WHERE ma = 'DA'), 0.150, 'ƒê√° cho ly M (150g)'),
      
      -- C√† ph√™ s·ªØa ƒë√° Size L
      (1, (SELECT id FROM mon_bien_the WHERE mon_id = 1 AND ten_bien_the = 'Size L'), 
       (SELECT id FROM nguyen_lieu WHERE ma = 'CF-BOT'), 0.025, 'C√† ph√™ b·ªôt cho ly L (25g)'),
      (1, (SELECT id FROM mon_bien_the WHERE mon_id = 1 AND ten_bien_the = 'Size L'), 
       (SELECT id FROM nguyen_lieu WHERE ma = 'SUA-TUOI'), 0.120, 'S·ªØa t∆∞∆°i cho ly L (120ml)'),
      (1, (SELECT id FROM mon_bien_the WHERE mon_id = 1 AND ten_bien_the = 'Size L'), 
       (SELECT id FROM nguyen_lieu WHERE ma = 'DUONG-TRANG'), 0.020, 'ƒê∆∞·ªùng cho ly L (20g)'),
      (1, (SELECT id FROM mon_bien_the WHERE mon_id = 1 AND ten_bien_the = 'Size L'), 
       (SELECT id FROM nguyen_lieu WHERE ma = 'DA'), 0.200, 'ƒê√° cho ly L (200g)')
      
      ON CONFLICT (mon_id, bien_the_id, nguyen_lieu_id) DO NOTHING
    `);
    
    // C√¥ng th·ª©c cho B·∫°c x·ªâu (id: 2, kh√¥ng c√≥ bi·∫øn th·ªÉ)
    await client.query(`
      INSERT INTO cong_thuc_mon (mon_id, bien_the_id, nguyen_lieu_id, so_luong, ghi_chu) VALUES
      (2, NULL, (SELECT id FROM nguyen_lieu WHERE ma = 'CF-BOT'), 0.015, '√çt c√† ph√™ h∆°n (15g)'),
      (2, NULL, (SELECT id FROM nguyen_lieu WHERE ma = 'SUA-TUOI'), 0.120, 'Nhi·ªÅu s·ªØa h∆°n (120ml)'),
      (2, NULL, (SELECT id FROM nguyen_lieu WHERE ma = 'DUONG-TRANG'), 0.010, 'ƒê∆∞·ªùng (10g)'),
      (2, NULL, (SELECT id FROM nguyen_lieu WHERE ma = 'DA'), 0.150, 'ƒê√° (150g)')
      ON CONFLICT DO NOTHING
    `);
    
    // C√¥ng th·ª©c cho Espresso (id: 3, kh√¥ng c√≥ bi·∫øn th·ªÉ)
    await client.query(`
      INSERT INTO cong_thuc_mon (mon_id, bien_the_id, nguyen_lieu_id, so_luong, ghi_chu) VALUES
      (3, NULL, (SELECT id FROM nguyen_lieu WHERE ma = 'CF-BOT'), 0.018, 'C√† ph√™ nguy√™n ch·∫•t (18g)')
      ON CONFLICT DO NOTHING
    `);
    
    // C√¥ng th·ª©c cho Americano (id: 4, kh√¥ng c√≥ bi·∫øn th·ªÉ)
    await client.query(`
      INSERT INTO cong_thuc_mon (mon_id, bien_the_id, nguyen_lieu_id, so_luong, ghi_chu) VALUES
      (4, NULL, (SELECT id FROM nguyen_lieu WHERE ma = 'CF-BOT'), 0.020, 'C√† ph√™ pha lo√£ng (20g)'),
      (4, NULL, (SELECT id FROM nguyen_lieu WHERE ma = 'DA'), 0.100, 'ƒê√° (100g)')
      ON CONFLICT DO NOTHING
    `);
    
    // C√¥ng th·ª©c cho Tr√† ƒë√†o cam s·∫£ - Size M, L (id: 5)
    await client.query(`
      INSERT INTO cong_thuc_mon (mon_id, bien_the_id, nguyen_lieu_id, so_luong, ghi_chu) VALUES
      (5, 4, (SELECT id FROM nguyen_lieu WHERE ma = 'TRA-XANH'), 0.005, 'Tr√† xanh Size M (5g)'),
      (5, 4, (SELECT id FROM nguyen_lieu WHERE ma = 'DUONG-TRANG'), 0.015, 'ƒê∆∞·ªùng Size M (15g)'),
      (5, 4, (SELECT id FROM nguyen_lieu WHERE ma = 'DA'), 0.150, 'ƒê√° Size M (150g)'),
      (5, 5, (SELECT id FROM nguyen_lieu WHERE ma = 'TRA-XANH'), 0.007, 'Tr√† xanh Size L (7g)'),
      (5, 5, (SELECT id FROM nguyen_lieu WHERE ma = 'DUONG-TRANG'), 0.020, 'ƒê∆∞·ªùng Size L (20g)'),
      (5, 5, (SELECT id FROM nguyen_lieu WHERE ma = 'DA'), 0.200, 'ƒê√° Size L (200g)')
      ON CONFLICT DO NOTHING
    `);
    
    // C√¥ng th·ª©c cho Tr√† olong s·ªØa (id: 6)
    await client.query(`
      INSERT INTO cong_thuc_mon (mon_id, bien_the_id, nguyen_lieu_id, so_luong, ghi_chu) VALUES
      (6, NULL, (SELECT id FROM nguyen_lieu WHERE ma = 'TRA-XANH'), 0.005, 'Tr√† olong (5g)'),
      (6, NULL, (SELECT id FROM nguyen_lieu WHERE ma = 'SUA-TUOI'), 0.080, 'S·ªØa t∆∞∆°i (80ml)'),
      (6, NULL, (SELECT id FROM nguyen_lieu WHERE ma = 'DUONG-TRANG'), 0.010, 'ƒê∆∞·ªùng (10g)'),
      (6, NULL, (SELECT id FROM nguyen_lieu WHERE ma = 'DA'), 0.150, 'ƒê√° (150g)')
      ON CONFLICT DO NOTHING
    `);
    
    const recipeCount = await client.query('SELECT COUNT(*) FROM cong_thuc_mon');
    console.log(`   ‚úÖ ƒê√£ t·∫°o ${recipeCount.rows[0].count} c√¥ng th·ª©c m√≥n\n`);
    
    // =====================================================================
    // 2. C√ÇP NH·∫¨T GI√Å V·ªêN M√ìN (t·ª´ view)
    // =====================================================================
    console.log('üí∞ 2. C·∫≠p nh·∫≠t gi√° v·ªën m√≥n t·ª´ c√¥ng th·ª©c...');
    
    await client.query(`
      UPDATE mon m
      SET gia_von = COALESCE((
        SELECT SUM(ct.so_luong * nl.gia_nhap_moi_nhat)
        FROM cong_thuc_mon ct
        JOIN nguyen_lieu nl ON nl.id = ct.nguyen_lieu_id
        WHERE ct.mon_id = m.id AND ct.bien_the_id IS NULL
      ), 0)
      WHERE m.active = TRUE
    `);
    
    const giaVonResult = await client.query(`
      SELECT id, ten, gia_von, gia_mac_dinh, 
             (gia_mac_dinh - gia_von) AS loi_nhuan,
             CASE 
               WHEN gia_mac_dinh > 0 
               THEN ROUND((gia_mac_dinh - gia_von)::NUMERIC / gia_mac_dinh * 100, 1)
               ELSE 0 
             END AS ty_le_loi_nhuan
      FROM mon 
      WHERE active = TRUE AND gia_von > 0
      ORDER BY id
    `);
    
    console.log('   Gi√° v·ªën ƒë√£ c·∫≠p nh·∫≠t:');
    giaVonResult.rows.forEach(m => {
      console.log(`   - ${m.ten}: Gi√° v·ªën ${m.gia_von}ƒë, B√°n ${m.gia_mac_dinh}ƒë, L√£i ${m.loi_nhuan}ƒë (${m.ty_le_loi_nhuan}%)`);
    });
    console.log('');
    
    // =====================================================================
    // 3. L·ªäCH S·ª¨ NH·∫¨P KHO (th√°ng 9 & 10)
    // =====================================================================
    console.log('üì• 3. T·∫°o l·ªãch s·ª≠ nh·∫≠p kho...');
    
    await client.query(`
      INSERT INTO nhap_kho (nguyen_lieu_id, so_luong, don_gia, nha_cung_cap, ngay_nhap, ghi_chu) VALUES
      -- Th√°ng 9/2025
      ((SELECT id FROM nguyen_lieu WHERE ma = 'CF-BOT'), 100, 250000, 'C√† ph√™ Highlands', '2025-09-05', 'Nh·∫≠p ƒë·∫ßu th√°ng 9'),
      ((SELECT id FROM nguyen_lieu WHERE ma = 'SUA-TUOI'), 200, 60000, 'Vinamilk', '2025-09-05', 'S·ªØa t∆∞∆°i kh√¥ng ƒë∆∞·ªùng'),
      ((SELECT id FROM nguyen_lieu WHERE ma = 'DUONG-TRANG'), 50, 20000, 'Bi√™n H√≤a Sugar', '2025-09-05', 'ƒê∆∞·ªùng tinh luy·ªán'),
      ((SELECT id FROM nguyen_lieu WHERE ma = 'DA'), 500, 5000, 'ƒê√° S√†i G√≤n', '2025-09-05', 'ƒê√° vi√™n ƒë√≥ng t√∫i'),
      
      -- Th√°ng 10/2025 - ƒê·∫ßu th√°ng
      ((SELECT id FROM nguyen_lieu WHERE ma = 'CF-BOT'), 80, 250000, 'C√† ph√™ Highlands', '2025-10-01', 'Nh·∫≠p ƒë·∫ßu th√°ng 10'),
      ((SELECT id FROM nguyen_lieu WHERE ma = 'SUA-TUOI'), 180, 60000, 'Vinamilk', '2025-10-01', 'Nh·∫≠p ƒë·∫ßu th√°ng 10'),
      ((SELECT id FROM nguyen_lieu WHERE ma = 'DUONG-TRANG'), 40, 20000, 'Bi√™n H√≤a Sugar', '2025-10-01', 'Nh·∫≠p ƒë·∫ßu th√°ng 10'),
      ((SELECT id FROM nguyen_lieu WHERE ma = 'DA'), 400, 5000, 'ƒê√° S√†i G√≤n', '2025-10-01', 'Nh·∫≠p ƒë·∫ßu th√°ng 10'),
      ((SELECT id FROM nguyen_lieu WHERE ma = 'TRA-XANH'), 30, 180000, 'Tr√† Th√°i Nguy√™n', '2025-10-01', 'Tr√† xanh nguy√™n ch·∫•t'),
      
      -- Th√°ng 10/2025 - Gi·ªØa th√°ng
      ((SELECT id FROM nguyen_lieu WHERE ma = 'BANH-FLAN'), 100, 8000, 'Topping House', '2025-10-15', 'B√°nh flan topping'),
      ((SELECT id FROM nguyen_lieu WHERE ma = 'THACH-DUA'), 50, 15000, 'Topping House', '2025-10-15', 'Th·∫°ch d·ª´a'),
      ((SELECT id FROM nguyen_lieu WHERE ma = 'SUA-TUOI'), 100, 60000, 'Vinamilk', '2025-10-20', 'Nh·∫≠p b·ªï sung gi·ªØa th√°ng'),
      ((SELECT id FROM nguyen_lieu WHERE ma = 'DA'), 300, 5000, 'ƒê√° S√†i G√≤n', '2025-10-20', 'Nh·∫≠p b·ªï sung')
    `);
    
    // C·∫≠p nh·∫≠t t·ªìn kho = t·ªïng nh·∫≠p
    await client.query(`
      UPDATE nguyen_lieu nl
      SET ton_kho = COALESCE((
        SELECT SUM(nk.so_luong)
        FROM nhap_kho nk
        WHERE nk.nguyen_lieu_id = nl.id
      ), 0)
    `);
    
    const nhapKhoCount = await client.query('SELECT COUNT(*) FROM nhap_kho');
    console.log(`   ‚úÖ ƒê√£ t·∫°o ${nhapKhoCount.rows[0].count} l·∫ßn nh·∫≠p kho`);
    
    const tonKhoResult = await client.query(`
      SELECT nl.ten, nl.ton_kho, nl.don_vi, 
             (nl.ton_kho * nl.gia_nhap_moi_nhat) AS gia_tri
      FROM nguyen_lieu nl
      WHERE nl.active = TRUE
      ORDER BY nl.ten
    `);
    
    console.log('\n   T·ªìn kho hi·ªán t·∫°i:');
    tonKhoResult.rows.forEach(nl => {
      console.log(`   - ${nl.ten}: ${nl.ton_kho} ${nl.don_vi} (${nl.gia_tri?.toLocaleString('vi-VN')}ƒë)`);
    });
    console.log('');
    
    // =====================================================================
    // 4. TH√äM CHI PH√ç ƒêA D·∫†NG (th√°ng 9 & 10)
    // =====================================================================
    console.log('üí∏ 4. Th√™m chi ph√≠ ƒëa d·∫°ng...');
    
    await client.query(`
      INSERT INTO chi_phi (loai_chi_phi, ten, so_tien, ngay_chi, ghi_chu) VALUES
      -- Th√°ng 9/2025
      ('DIEN', 'Ti·ªÅn ƒëi·ªán th√°ng 9/2025', 3200000, '2025-09-05', 'H√≥a ƒë∆°n EVN th√°ng 9'),
      ('NUOC', 'Ti·ªÅn n∆∞·ªõc th√°ng 9/2025', 750000, '2025-09-05', 'H√≥a ƒë∆°n Sawaco th√°ng 9'),
      ('THUE_MB', 'Thu√™ m·∫∑t b·∫±ng th√°ng 9/2025', 15000000, '2025-09-01', 'Thu√™ qu√°n th√°ng 9'),
      ('NGUYEN_LIEU', 'Mua c√† ph√™ b·ªôt', 25000000, '2025-09-05', 'Nh·∫≠p kho th√°ng 9'),
      ('NGUYEN_LIEU', 'Mua s·ªØa t∆∞∆°i', 12000000, '2025-09-05', 'Nh·∫≠p kho th√°ng 9'),
      ('VAN_PHONG', 'VƒÉn ph√≤ng ph·∫©m', 500000, '2025-09-10', 'Gi·∫•y in, b√∫t, k·∫πp'),
      
      -- Th√°ng 10/2025 - ƒê√£ c√≥ trong migration, th√™m n·ªØa
      ('NGUYEN_LIEU', 'Mua c√† ph√™ b·ªôt', 20000000, '2025-10-01', 'Nh·∫≠p kho ƒë·∫ßu th√°ng 10'),
      ('NGUYEN_LIEU', 'Mua s·ªØa t∆∞∆°i', 10800000, '2025-10-01', 'Nh·∫≠p kho ƒë·∫ßu th√°ng 10'),
      ('NGUYEN_LIEU', 'Mua topping', 2300000, '2025-10-15', 'B√°nh flan, th·∫°ch d·ª´a'),
      ('BAO_TRI', 'V·ªá sinh m√°y l·∫°nh', 800000, '2025-10-12', 'B·∫£o tr√¨ ƒë·ªãnh k·ª≥'),
      ('MARKETING', 'In banner qu·∫£ng c√°o', 1200000, '2025-10-18', 'Banner khuy·∫øn m√£i'),
      ('VAN_PHONG', 'M·ª±c in h√≥a ƒë∆°n', 350000, '2025-10-20', 'M·ª±c in nhi·ªát'),
      ('KHAC', 'Qu√† t·∫∑ng kh√°ch h√†ng th√¢n thi·∫øt', 1000000, '2025-10-22', 'Voucher, qu√† t·∫∑ng')
      
      ON CONFLICT DO NOTHING
    `);
    
    const chiPhiCount = await client.query('SELECT COUNT(*) FROM chi_phi');
    const tongChiPhi = await client.query(`
      SELECT 
        DATE_TRUNC('month', ngay_chi) AS thang,
        SUM(so_tien) AS tong
      FROM chi_phi
      GROUP BY DATE_TRUNC('month', ngay_chi)
      ORDER BY thang DESC
    `);
    
    console.log(`   ‚úÖ ƒê√£ t·∫°o ${chiPhiCount.rows[0].count} b√∫t chi ph√≠`);
    console.log('\n   T·ªïng chi ph√≠ theo th√°ng:');
    tongChiPhi.rows.forEach(row => {
      const thang = new Date(row.thang).toLocaleDateString('vi-VN', { year: 'numeric', month: '2-digit' });
      console.log(`   - ${thang}: ${parseInt(row.tong).toLocaleString('vi-VN')}ƒë`);
    });
    console.log('');
    
    // =====================================================================
    // 5. C·∫¨P NH·∫¨T L∆Ø∆†NG NH√ÇN VI√äN
    // =====================================================================
    console.log('üíµ 5. C·∫≠p nh·∫≠t l∆∞∆°ng nh√¢n vi√™n...');
    
    await client.query(`
      UPDATE users
      SET 
        luong_co_ban = CASE 
          WHEN username = 'admin' THEN 15000000
          WHEN username = 'cashier' THEN 8000000
          WHEN username LIKE 'kitchen%' THEN 7000000
          WHEN username LIKE 'manager%' THEN 12000000
          ELSE 6000000
        END,
        luong_theo_gio = CASE 
          WHEN username = 'admin' THEN 0
          WHEN username = 'cashier' THEN 35000
          WHEN username LIKE 'kitchen%' THEN 30000
          WHEN username LIKE 'manager%' THEN 50000
          ELSE 25000
        END
      WHERE is_active = TRUE
    `);
    
    const usersLuong = await client.query(`
      SELECT username, full_name, luong_co_ban, luong_theo_gio
      FROM users
      WHERE is_active = TRUE
      ORDER BY luong_co_ban DESC
    `);
    
    console.log('   L∆∞∆°ng nh√¢n vi√™n:');
    usersLuong.rows.forEach(u => {
      console.log(`   - ${u.full_name} (${u.username}): ${u.luong_co_ban.toLocaleString('vi-VN')}ƒë/th√°ng + ${u.luong_theo_gio.toLocaleString('vi-VN')}ƒë/gi·ªù`);
    });
    console.log('');
    
    // =====================================================================
    // 6. T·∫†O B·∫¢NG C√îNG M·∫™U (th√°ng 10)
    // =====================================================================
    console.log('üïê 6. T·∫°o b·∫£ng c√¥ng m·∫´u th√°ng 10...');
    
    // L·∫•y c√°c ca ƒë√£ ƒë√≥ng trong th√°ng 10
    const casResult = await client.query(`
      SELECT id, nhan_vien_id, started_at, ended_at, closed_at
      FROM ca_lam
      WHERE status = 'CLOSED'
        AND started_at >= '2025-10-01'
        AND started_at < '2025-11-01'
      ORDER BY started_at
      LIMIT 10
    `);
    
    for (const ca of casResult.rows) {
      const gioVao = ca.started_at;
      const gioRa = ca.closed_at || ca.ended_at;
      
      // T√≠nh s·ªë gi·ªù l√†m vi·ªác
      const soGio = (new Date(gioRa) - new Date(gioVao)) / (1000 * 60 * 60);
      
      // L·∫•y l∆∞∆°ng theo gi·ªù
      const luongResult = await client.query(
        'SELECT luong_theo_gio FROM users WHERE user_id = $1',
        [ca.nhan_vien_id]
      );
      const luongTheoGio = luongResult.rows[0]?.luong_theo_gio || 0;
      const luongCa = soGio * luongTheoGio;
      
      await client.query(`
        INSERT INTO bang_cong (user_id, ca_lam_id, gio_vao, gio_ra, luong_ca, trang_thai)
        VALUES ($1, $2, $3, $4, $5, 'DA_TINH_LUONG')
        ON CONFLICT DO NOTHING
      `, [ca.nhan_vien_id, ca.id, gioVao, gioRa, luongCa]);
    }
    
    const bangCongCount = await client.query('SELECT COUNT(*) FROM bang_cong');
    const tongLuong = await client.query(`
      SELECT SUM(luong_ca) AS tong
      FROM bang_cong
      WHERE trang_thai = 'DA_TINH_LUONG'
    `);
    
    console.log(`   ‚úÖ ƒê√£ t·∫°o ${bangCongCount.rows[0].count} b·∫£n ghi b·∫£ng c√¥ng`);
    console.log(`   üí∞ T·ªïng l∆∞∆°ng ƒë√£ t√≠nh: ${parseInt(tongLuong.rows[0].tong || 0).toLocaleString('vi-VN')}ƒë\n`);
    
    await client.query('COMMIT');
    
    // =====================================================================
    // T·ªîNG K·∫æT
    // =====================================================================
    console.log('='.repeat(80));
    console.log('‚úÖ SEED D·ªÆ LI·ªÜU HO√ÄN T·∫§T!');
    console.log('='.repeat(80));
    console.log('\nüìä D·ªÆ LI·ªÜU ƒê√É T·∫†O:');
    console.log(`  ‚úÖ ${recipeCount.rows[0].count} c√¥ng th·ª©c m√≥n`);
    console.log(`  ‚úÖ ${nhapKhoCount.rows[0].count} l·∫ßn nh·∫≠p kho`);
    console.log(`  ‚úÖ ${chiPhiCount.rows[0].count} b√∫t chi ph√≠`);
    console.log(`  ‚úÖ ${bangCongCount.rows[0].count} b·∫£n ghi b·∫£ng c√¥ng`);
    console.log(`  ‚úÖ Gi√° v·ªën ƒë√£ c·∫≠p nh·∫≠t cho ${giaVonResult.rows.length} m√≥n`);
    console.log(`  ‚úÖ L∆∞∆°ng cho ${usersLuong.rows.length} nh√¢n vi√™n`);
    
    console.log('\nüí° B·∫†N C√ì TH·ªÇ XEM:');
    console.log('  - Gi√° v·ªën m√≥n: SELECT * FROM v_gia_von_mon;');
    console.log('  - T·ªìn kho c·∫£nh b√°o: SELECT * FROM v_nguyen_lieu_canh_bao;');
    console.log('  - Chi ph√≠ th√°ng: SELECT * FROM v_chi_phi_thang;');
    console.log('\nüöÄ S·∫¥N S√ÄNG L√ÄM B√ÅO C√ÅO N√ÇNG CAO!\n');
    
  } catch (error) {
    await client.query('ROLLBACK');
    console.error('\n‚ùå Seed th·∫•t b·∫°i:', error.message);
    console.error(error);
    throw error;
  } finally {
    client.release();
    await pool.end();
  }
}

seedData();
