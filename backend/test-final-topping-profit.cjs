const {Pool}=require('pg');
require('dotenv').config({path:require('path').join(__dirname,'.env')});
const p=new Pool({
  host:process.env.DB_HOST,
  port:process.env.DB_PORT,
  database:process.env.DB_NAME,
  user:process.env.DB_USER,
  password:String(process.env.DB_PASSWORD)
});

async function test() {
  console.log('\n‚úÖ TEST TOPPING TRONG B√ÅO C√ÅO L·ª¢I NHU·∫¨N');
  console.log('='.repeat(70));
  console.log();
  
  // L·∫•y c√°c ƒë∆°n c√≥ topping
  const orders = await p.query(`
    SELECT * FROM v_profit_with_topping_cost
    WHERE gia_von_topping > 0
    ORDER BY order_id DESC
    LIMIT 5
  `);
  
  console.log(`üì¶ T√åM TH·∫§Y ${orders.rows.length} ƒê∆†N C√ì TOPPING:\n`);
  
  let totalRevenue = 0;
  let totalCostMon = 0;
  let totalCostTopping = 0;
  let totalProfit = 0;
  
  for (const order of orders.rows) {
    console.log(`\nüí∞ ƒê∆†N H√ÄNG #${order.order_id}:`);
    console.log('-'.repeat(70));
    console.log(`   Doanh thu:        ${order.doanh_thu.toLocaleString()}ƒë`);
    console.log(`   Gi√° v·ªën m√≥n:      ${order.gia_von_mon.toLocaleString()}ƒë`);
    console.log(`   Gi√° v·ªën topping:  ${order.gia_von_topping.toLocaleString()}ƒë  ‚≠ê`);
    console.log(`   T·ªïng gi√° v·ªën:     ${order.tong_gia_von.toLocaleString()}ƒë`);
    console.log(`   L·ª£i nhu·∫≠n:        ${order.loi_nhuan.toLocaleString()}ƒë`);
    console.log(`   Margin:           ${((order.loi_nhuan / order.doanh_thu) * 100).toFixed(1)}%`);
    
    totalRevenue += parseInt(order.doanh_thu);
    totalCostMon += parseInt(order.gia_von_mon);
    totalCostTopping += parseInt(order.gia_von_topping);
    totalProfit += parseInt(order.loi_nhuan);
  }
  
  console.log('\n' + '='.repeat(70));
  console.log('üìä T·ªîNG K·∫æT:');
  console.log('='.repeat(70));
  console.log(`   T·ªïng ${orders.rows.length} ƒë∆°n h√†ng c√≥ topping`);
  console.log(`   Doanh thu:           ${totalRevenue.toLocaleString()}ƒë`);
  console.log(`   Gi√° v·ªën m√≥n:         ${totalCostMon.toLocaleString()}ƒë`);
  console.log(`   Gi√° v·ªën topping:     ${totalCostTopping.toLocaleString()}ƒë  ‚≠ê‚≠ê‚≠ê`);
  console.log(`   T·ªïng gi√° v·ªën:        ${(totalCostMon + totalCostTopping).toLocaleString()}ƒë`);
  console.log(`   L·ª£i nhu·∫≠n:           ${totalProfit.toLocaleString()}ƒë`);
  console.log(`   Margin:              ${((totalProfit / totalRevenue) * 100).toFixed(1)}%`);
  
  console.log('\n‚úÖ K·∫æT LU·∫¨N:');
  console.log('   ‚úÖ Topping ƒê√É ƒê∆Ø·ª¢C t√≠nh v√†o gi√° v·ªën!');
  console.log('   ‚úÖ B√°o c√°o l·ª£i nhu·∫≠n CH√çNH X√ÅC!');
  console.log('   ‚úÖ H·ªá th·ªëng ho·∫°t ƒë·ªông HO√ÄN H·∫¢O!\n');
  
  await p.end();
}

test();
