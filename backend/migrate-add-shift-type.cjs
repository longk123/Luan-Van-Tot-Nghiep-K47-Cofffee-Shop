/**
 * Migration: Th√™m shift_type v√†o ca_lam ƒë·ªÉ h·ªó tr·ª£ ca cho Kitchen/Barista
 * - CASHIER: Ca thu ng√¢n (c·∫ßn tracking ti·ªÅn, doanh thu)
 * - KITCHEN: Ca pha ch·∫ø/b·∫øp (ch·ªâ tracking th·ªùi gian, s·ªë m√≥n)
 */

const { Pool } = require('pg');
require('dotenv').config();

const pool = new Pool({
  host: process.env.DB_HOST || 'localhost',
  port: process.env.DB_PORT || 5432,
  database: process.env.DB_NAME || 'coffee_shop',
  user: process.env.DB_USER || 'postgres',
  password: process.env.DB_PASSWORD || '123456'
});

async function migrate() {
  const client = await pool.connect();
  
  try {
    await client.query('BEGIN');
    
    console.log('üìù Th√™m c·ªôt shift_type v√†o b·∫£ng ca_lam...');
    
    // 1. Th√™m c·ªôt shift_type
    await client.query(`
      ALTER TABLE ca_lam 
      ADD COLUMN IF NOT EXISTS shift_type TEXT DEFAULT 'CASHIER'
        CHECK (shift_type IN ('CASHIER', 'KITCHEN'));
    `);
    
    // 2. C·∫≠p nh·∫≠t t·∫•t c·∫£ ca c≈© th√†nh CASHIER
    await client.query(`
      UPDATE ca_lam 
      SET shift_type = 'CASHIER' 
      WHERE shift_type IS NULL;
    `);
    
    // 3. Th√™m c√°c c·ªôt th·ªëng k√™ cho ca KITCHEN
    console.log('üìù Th√™m c·ªôt tracking cho Kitchen staff...');
    await client.query(`
      ALTER TABLE ca_lam 
      ADD COLUMN IF NOT EXISTS total_items_made INT DEFAULT 0,
      ADD COLUMN IF NOT EXISTS avg_prep_time_seconds INT DEFAULT 0;
    `);
    
    // 4. T·∫°o index
    await client.query(`
      CREATE INDEX IF NOT EXISTS idx_ca_lam_shift_type ON ca_lam(shift_type);
    `);
    
    await client.query('COMMIT');
    
    console.log('‚úÖ Migration completed successfully!\n');
    console.log('üìä Summary:');
    console.log('   - Added shift_type column (CASHIER | KITCHEN)');
    console.log('   - Added total_items_made column');
    console.log('   - Added avg_prep_time_seconds column');
    console.log('   - Created index on shift_type');
    console.log('\nüí° Usage:');
    console.log('   - Thu ng√¢n: shift_type = CASHIER (c·∫ßn tracking ti·ªÅn)');
    console.log('   - Pha ch·∫ø/B·∫øp: shift_type = KITCHEN (tracking m√≥n l√†m)');
    
  } catch (error) {
    await client.query('ROLLBACK');
    console.error('‚ùå Migration failed:', error.message);
    console.error(error.stack);
    process.exit(1);
  } finally {
    client.release();
    await pool.end();
  }
}

migrate();

