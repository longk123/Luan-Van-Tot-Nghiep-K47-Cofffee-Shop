// File path: D:\my-thesis\backend\test-views.js
// Script ƒë·ªÉ test c√°c view th·ªëng k√™ m·ªõi

const { Pool } = require('pg');

// C·∫•u h√¨nh database
const pool = new Pool({
  host: process.env.DB_HOST || 'localhost',
  port: process.env.DB_PORT || 5432,
  user: process.env.DB_USER || 'postgres',
  password: process.env.DB_PASSWORD || '123456',
  database: process.env.DB_NAME || 'coffee_shop',
});

async function testViews() {
  try {
    console.log('üîó ƒêang k·∫øt n·ªëi database...');
    
    // Test connection
    const { rows } = await pool.query('SELECT NOW() AS now');
    console.log('‚úÖ K·∫øt n·ªëi database th√†nh c√¥ng:', rows[0].now);

    console.log('\nüìä Testing c√°c view th·ªëng k√™...\n');

    // =========================================================
    // 1. TEST VIEW DOANH THU H√ÄNG NG√ÄY
    // =========================================================
    console.log('üìà 1. Th·ªëng k√™ doanh thu h√†ng ng√†y (7 ng√†y g·∫ßn nh·∫•t):');
    console.log('=' .repeat(80));
    
    const salesResult = await pool.query(`
      SELECT * FROM v_daily_sales_summary 
      WHERE ngay >= CURRENT_DATE - INTERVAL '7 days'
      ORDER BY ngay DESC
      LIMIT 10
    `);
    
    if (salesResult.rows.length > 0) {
      console.table(salesResult.rows);
    } else {
      console.log('‚ùå Kh√¥ng c√≥ d·ªØ li·ªáu doanh thu trong 7 ng√†y g·∫ßn nh·∫•t');
    }

    // =========================================================
    // 2. TEST VIEW ƒê∆†N H·ª¶Y
    // =========================================================
    console.log('\nüìâ 2. Th·ªëng k√™ ƒë∆°n h·ªßy (7 ng√†y g·∫ßn nh·∫•t):');
    console.log('=' .repeat(80));
    
    const cancelledResult = await pool.query(`
      SELECT * FROM v_cancelled_orders_summary 
      WHERE ngay >= CURRENT_DATE - INTERVAL '7 days'
      ORDER BY ngay DESC
      LIMIT 10
    `);
    
    if (cancelledResult.rows.length > 0) {
      console.table(cancelledResult.rows);
    } else {
      console.log('‚úÖ Kh√¥ng c√≥ ƒë∆°n h·ªßy trong 7 ng√†y g·∫ßn nh·∫•t (t·ªët!)');
    }

    // =========================================================
    // 3. TEST VIEW CHI TI·∫æT ƒê∆†N H·ª¶Y
    // =========================================================
    console.log('\nüîç 3. Chi ti·∫øt ƒë∆°n h·ªßy (30 ng√†y g·∫ßn nh·∫•t):');
    console.log('=' .repeat(80));
    
    const detailResult = await pool.query(`
      SELECT 
        don_hang_id,
        ten_ban,
        order_type,
        opened_at,
        ly_do_huy,
        thu_ngan,
        tong_tien_huy
      FROM v_cancelled_orders_detail 
      WHERE opened_at >= CURRENT_DATE - INTERVAL '30 days'
      ORDER BY opened_at DESC
      LIMIT 10
    `);
    
    if (detailResult.rows.length > 0) {
      console.table(detailResult.rows);
    } else {
      console.log('‚úÖ Kh√¥ng c√≥ ƒë∆°n h·ªßy trong 30 ng√†y g·∫ßn nh·∫•t');
    }

    // =========================================================
    // 4. TEST FUNCTION AUDIT
    // =========================================================
    console.log('\nüîé 4. Test function audit - t√¨m ƒë∆°n h·ªßy c√≥ l√Ω do:');
    console.log('=' .repeat(80));
    
    const auditResult = await pool.query(`
      SELECT * FROM get_cancelled_orders_by_reason('%')
      ORDER BY opened_at DESC
      LIMIT 5
    `);
    
    if (auditResult.rows.length > 0) {
      console.table(auditResult.rows);
    } else {
      console.log('‚úÖ Kh√¥ng c√≥ ƒë∆°n h·ªßy n√†o c√≥ l√Ω do');
    }

    // =========================================================
    // 5. TEST C·∫§U TR√öC B·∫¢NG DON_HANG
    // =========================================================
    console.log('\nüèóÔ∏è  5. Ki·ªÉm tra c·∫•u tr√∫c b·∫£ng don_hang:');
    console.log('=' .repeat(80));
    
    const structureResult = await pool.query(`
      SELECT 
        column_name,
        data_type,
        is_nullable,
        column_default
      FROM information_schema.columns 
      WHERE table_name = 'don_hang' 
        AND table_schema = 'public'
      ORDER BY ordinal_position
    `);
    
    console.table(structureResult.rows);

    // =========================================================
    // 6. TH·ªêNG K√ä T·ªîNG QUAN
    // =========================================================
    console.log('\nüìä 6. Th·ªëng k√™ t·ªïng quan ƒë∆°n h√†ng:');
    console.log('=' .repeat(80));
    
    const overviewResult = await pool.query(`
      SELECT 
        trang_thai,
        COUNT(*) as so_luong,
        COUNT(CASE WHEN ly_do_huy IS NOT NULL THEN 1 END) as co_ly_do_huy,
        COUNT(CASE WHEN ly_do_huy IS NULL THEN 1 END) as khong_ly_do_huy
      FROM don_hang 
      GROUP BY trang_thai
      ORDER BY so_luong DESC
    `);
    
    console.table(overviewResult.rows);

    console.log('\nüéâ Test ho√†n t·∫•t!');
    console.log('\nüí° G·ª£i √Ω s·ª≠ d·ª•ng:');
    console.log('- Ch·∫°y migration: node migrate-add-cancel-reason.js');
    console.log('- Test views: node test-views.js');
    console.log('- Xem th·ªëng k√™ realtime: SELECT * FROM v_daily_sales_summary;');

  } catch (error) {
    console.error('‚ùå L·ªói test:', error);
    throw error;
  } finally {
    await pool.end();
  }
}

// Ch·∫°y test
if (require.main === module) {
  testViews()
    .then(() => {
      console.log('‚úÖ Test th√†nh c√¥ng!');
      process.exit(0);
    })
    .catch((error) => {
      console.error('‚ùå Test th·∫•t b·∫°i:', error);
      process.exit(1);
    });
}

module.exports = { testViews };
